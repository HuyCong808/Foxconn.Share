 Thread.CurrentThread.IsBackground = true;
            Thread.CurrentThread.Name = "Auto run thread.";
            FOVType pCheck = FOVType.Unknow;
            int nRet = 0;
            while (true)
            {
                try
                {
                    pCheck = FOVType.L1_PCB1;
                    if (GetSignal("S200"))
                    {
                        Console.WriteLine($"AutoRunManager =====> {pCheck}");
                        nRet = CheckType(pCheck);
                        CheckResults(pCheck);
                        // StatusBar
                    }
                    pCheck = FOVType.L1_PCB2;
                    if (GetSignal("S202"))
                    {
                        Console.WriteLine($"AutoRunManager =====> {pCheck}");
                        nRet = CheckType(pCheck);
                        CheckResults(pCheck);
                        // StatusBar
                    }
                }
                catch (Exception ex)
                {
                    Console.WriteLine(ex.Message);
                }
                finally
                {
                    Thread.Sleep(100);
                }
            }



            private bool GetSignal(string device)
        {
            //if (_device.PLC1.GetFlag(device) == 1)
            //{
            //    _device.PLC1.SetBitDevice(device, 0);
            //    // Neu get M1 = 1 thi reset M1 = 0
            //    return true;
            //}
            //else
            //{
            return false;
            // }
        }



         private void SetResultToPLC(FOVType pCheck, int pResult) // set pass fail voi PLC
        {
            switch (pCheck)
            {
                case FOVType.Unknow:
                    break;
                case FOVType.L1_PCB1:
                    {
                        // neu pass ->


                        // neu fail ->


                    }
                    break;
                case FOVType.L1_PCB2:
                    {
                        // neu pass ->


                        // neu fail ->


                    }
                    break;
                default:
                    break;
            }
        }



          private void CheckResults(FOVType pCheck)
        {
            switch (pCheck)
            {
                case FOVType.Unknow:
                    break;
                case FOVType.L1_PCB1:
                    {
                        var f = _FOVResults.FirstOrDefault(x => x.Type == pCheck);
                        if (f != null)
                        {
                            //  SetResultToPLC(pCheck, f.Result);
                        }
                        break;
                    }
                case FOVType.L1_PCB2:
                    {
                        var f = _FOVResults.FirstOrDefault(x => x.Type == pCheck);
                        if (f != null)
                        {
                            //   SetResultToPLC(pCheck, f.Result);
                        }
                        break;
                    }
            }
        }