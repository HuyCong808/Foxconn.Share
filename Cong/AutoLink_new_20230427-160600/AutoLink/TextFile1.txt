
            string SN1 = "ads";
            String SN2 = "sdd";
            string send = "SN1SN2";
            string data = send.Replace("SN1", SN1).Replace("SN2", SN2);
//////// open image
            string PathCapture = @"D:\Cong\barcode\barcode3.png";
            var img = new Bitmap(PathCapture).ToImage<Bgr, byte>();
            _image = img;
            imbCamera.Image = img;
            var barcode = string.Empty;

/////////   
anhloi.jpg
///////// Code AutoRUN
             if (_tcpClient.Receive() == "SCANSN")
            {
                if (CheckBarcode(0) == 1) // check 2 barcode 
                {
                    if (SFIS1(_data) == 1) // send _data , nhan pass fail
                    {
                        _tcpClient.Send("SCANOK" + "\r\n");
                        LogInfoMessage("SCANOK");
                    }
                    else
                    {
                        _tcpClient.Send("SCANNG" + "\r\n");
                        LogInfoMessage("SCANNG");
                    }
                }
                else
                {
                    LogInfoMessage("Không SCAN được Barcode");
                }
            }
/////////


//Test
    //private int CheckFOV()
        //{
        //}
        //private int CheckTerminal(string SN)
        //{
        //}


          string data = MachineParams.Config.Terminal.Format.ToString();
                    _data = data.Replace("SN1", SN1).Replace("SN2", SN2);
                    LogInfoMessage("Data Link: " + _data);


//////
private int CheckFOV(FOVType type)
        {
            // Tim thong so cua FOV type
            // Lay anh tu camera theo cai dat FOV
            // Xu ly bitmap cho tung SMD




            using (var image = new Bitmap("").ToImage<Bgr, byte>())
            {
                if (image != null)
                {
                    using (var src = image.Clone())
                    using (var dst = image.Clone())
                    {
                        foreach (var smd in SMDs)
                        {
                            src.ROI = SetRec(smd);
                            dst.ROI = SetRec(smd);

                            // xu ly anh
                            if (smd.Type == SMDType.SN1)
                            {
                                _SN1 = "";
                            }
                            if (smd.Type == SMDType.SN2)
                            {
                                _SN2 = "";
                            }

                            src.ROI = new Rectangle();
                            dst.ROI = new Rectangle();
                        }
                        // Hien thi dst.Clone() ra imageBox
                    }
                }
                else
                {
                    MessageBox.Show("FOV: No Bitmap");
                    return 0;
                }
            }

            ///////////   public int CheckBarcode(int x)
        {
            if (x == 0)
            {
                string path = "Data\\barcode0.png";
                using (var bitmap = new Bitmap(path).ToImage<Bgr, byte>())
                {
                    if (bitmap != null)
                    {
                        using (var src = bitmap.Clone())
                        using (var dst = bitmap.Clone())
                        {
                            src.ROI = SetRec(x);
                            dst.ROI = SetRec(x);
                            // Xu ly anh.
                            ScanSN(src);
                            if (_SN != string.Empty)
                            {
                                _SN1 = _SN;
                                listSN.Add(_SN1);
                                LogInfoMessage("SN1: " + _SN1);
                                src.ROI = new Rectangle();
                                dst.ROI = new Rectangle();
                                imbCamera.Image = dst.Clone();
                                return 1;
                            }
                            else
                            {
                                return 0;
                            }
                        }
                    }
                    else
                    {
                        MessageBox.Show("Không có ảnh SMD1");
                        return 0;
                    }
                }
            }
            if (x == 1)
            {
                string path = "Data\\barcode1.png";
                using (var bitmap = new Bitmap(path).ToImage<Bgr, byte>())
                {
                    if (bitmap != null)
                    {
                        using (var src = bitmap.Clone())
                        using (var dst = bitmap.Clone())
                        {
                            src.ROI = SetRec(x);
                            dst.ROI = SetRec(x);

                            // Xu ly anh.
                            ScanSN(src);
                            if (_SN != string.Empty)
                            {
                                _SN2 = _SN;
                                listSN.Add(_SN2);
                                LogInfoMessage("SN2: " + _SN2);
                                Thread.Sleep(100);
                                src.ROI = new Rectangle();
                                dst.ROI = new Rectangle();
                                imbCamera.Image = dst.Clone();
                                return 1;
                            }
                            else
                            {
                                return 0;
                            }
                        }
                    }
                    else
                    {
                        MessageBox.Show("Không có ảnh SMD2");
                        return 0;
                    }
                }
            }
            return 0;
        }





        ///////////ve ROI len anh 
        // Khai báo biến để lưu ảnh
Image<Bgr, byte> dst = new Image<Bgr, byte>(100, 100);

// Khai báo biến để lưu màu và độ dày đường vẽ
Bgr color = new Bgr(255, 0, 0); // màu đỏ
int thickness = 2;

// Khai báo biến để lưu tọa độ và kích thước của hình chữ nhật
Rectangle rect = new Rectangle(10, 10, 50, 50);

// Vẽ hình chữ nhật lên ảnh
dst.Draw(rect, color, thickness);

// Hiển thị ảnh
pictureBox.Image = dst.ToBitmap();
















///////////////////////// 1 anh 2 ROI
  string path = "data\\taytrai.bmp";
            using (var image = new Bitmap(path).ToImage<Bgr, byte>())
            {
                if (image != null)
                {
                    using (var src = image.Clone())
                    using (var dst = image.Clone())
                    {
                        for (int i = 0; i < 2; i++)
                        {
                            src.ROI = SetRec(i);
                            dst.ROI = SetRec(i);
                            // xu ly anh
                            if (i == 0)
                            {
                                ScanSN(src);
                                src.Save("data\\barcodetest1.png");
                                _rect1 = SetRec(0);
                                _SN1 = _SN;
                                LogInfoMessage("SN1: " + _SN1);
                                Thread.Sleep(100);
                            }
                            if (i == 1)
                            {
                                ScanSN(src);
                                src.Save("data\\barcodetest2.png");
                                _rect2 = SetRec(1);
                                _SN2 = _SN;
                                LogInfoMessage("SN2: " + _SN2);
                                Thread.Sleep(100);
                            }
                            src.ROI = new Rectangle();
                            dst.ROI = new Rectangle();
                        }
                        // Hien thi dst.Clone() ra imageBox
                        // Vẽ 2 hình chữ nhật trên ảnh
                        var ROI1 = _rect1;
                        var ROI2 = _rect2;
                        dst.Draw(ROI1, new Bgr(Color.Red), 2);
                        dst.Draw(ROI2, new Bgr(Color.Blue), 2);
                        // Hiển thị ảnh với 2 vùng ROI
                        imbCamera.Image = dst.Clone();
                        return 1;
                    }
                }
                else
                {
                    MessageBox.Show("FOV: No Bitmap");
                    return 0;
                }
            }




////// luu anh string folderName = DateTime.Today.ToString("yyyy.MM.dd");
            Directory.CreateDirectory(folderName);
            string photoTime = DateTime.Today.ToString("MM.dd.yyy" +
                "" +
                "y HH.mm.ss");
            string path = "E:\\Cong";
            string imagePath = path + "\\" + photoTime + ".jpg";
            _image.Save(imagePath);
 ///////// xoa anh   public void DeleteFolder()
        {
            // xoa anh
            string dirName = "";
            string dateFormat = "yyyy.MM.dd";
            string strBaseDirPath = "D:\\Cong\\New folder\\AutoApp\\AutoApp\\bin\\Debug\\Image";
            DirectoryInfo baseDir = new DirectoryInfo(strBaseDirPath);
            DirectoryInfo[] subDirectories = baseDir.GetDirectories();
            if (subDirectories != null && subDirectories.Length > 0)
            {
                DateTime dtName;
                for (int j = subDirectories.Length - 1; j >= 0; j--)
                {
                    dirName = subDirectories[j].Name.Trim();
                    if (DateTime.TryParseExact(dirName, dateFormat, System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, out dtName))
                    {
                        if (DateTime.Today.Subtract(dtName).TotalDays > 2)
                            subDirectories[j].Delete(true);
                    }
                }
            }
        }